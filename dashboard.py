# -*- coding: utf-8 -*-
"""Dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bRMHJYirfc9N-oWYuX2o6I5mo64-Ow3A
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import classification_report, confusion_matrix

# Judul
st.title("Dashboard Prediksi Risiko Stroke")

# Upload file prediksi
uploaded_file = st.file_uploader("Upload file rf_predictions.csv", type=["csv"])
if uploaded_file:
    df = pd.read_csv(uploaded_file)

    st.subheader("Cuplikan Data")
    st.write(df.head())

    # Konversi ke integer jika perlu
    df['prediction'] = df['prediction'].astype(int)
    df['stroke'] = df['stroke'].astype(int)

    # Hitung akurasi
    akurasi = (df['prediction'] == df['stroke']).mean()
    st.metric("Akurasi Model", f"{akurasi * 100:.2f}%")

    # Bar chart perbandingan prediksi vs aktual
    st.subheader("Distribusi Stroke Aktual vs Prediksi")
    count_df = df.groupby(['stroke', 'prediction']).size().reset_index(name='count')
    fig, ax = plt.subplots()
    sns.barplot(data=count_df, x="stroke", y="count", hue="prediction", ax=ax)
    ax.set_xlabel("Label Stroke (0: Tidak, 1: Ya)")
    ax.set_ylabel("Jumlah")
    ax.set_title("Perbandingan Stroke Aktual vs Prediksi")
    st.pyplot(fig)

    # Confusion Matrix
    st.subheader("Confusion Matrix")
    cm = confusion_matrix(df["stroke"], df["prediction"])
    fig2, ax2 = plt.subplots()
    sns.heatmap(cm, annot=True, fmt="d", cmap="Blues", xticklabels=["No Stroke", "Stroke"], yticklabels=["No Stroke", "Stroke"], ax=ax2)
    ax2.set_xlabel("Prediksi")
    ax2.set_ylabel("Aktual")
    st.pyplot(fig2)

    # Classification Report
    st.subheader("Classification Report")
    report = classification_report(df["stroke"], df["prediction"], output_dict=True)
    st.dataframe(pd.DataFrame(report).transpose())